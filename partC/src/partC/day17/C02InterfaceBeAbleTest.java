package partC.day17;

import partC.day17.beable.AI;
import partC.day17.beable.Dog;
import partC.day17.beable.Human;
import partC.day17.beable.Runnable;
import partC.day17.beable.Thinkable;

public class C02InterfaceBeAbleTest {
	public static void main(String[] args) {
		Thinkable th1= new Human();
		Thinkable th2= new AI();
		//Thinkable th3= new Human(); 오류 : Dog은 Thinkable의 구현 클래스가 아님
		Runnable run = new Dog();
		//Runnable run = new AI(); 오류 : AI은 Runnable의 구현 클래스가 아님
		
		Thinkable[] thinks = new Thinkable[2];
		thinks[0] = th1;
		thinks[1] = th2;
		
		//다형성 예시 : Human, AI객체로 각각 생성되었지만 같은 인터페이스 Thinkable로 참조합니다.
		//           이때 calculate 메소드는 각각 다른 내용으로 실행합니다.
		for (Thinkable t : thinks) {
			System.out.println("==Thinkable 인터페이스의 calculate 메소드 실행 결과==");
			if(t instanceof Human)
				System.out.println("나 휴먼 계산 중입니다....");
			else if(t instanceof AI)
				System.out.println("나 AI 계산 중입니다....");
			else {
				System.out.println("알 수 없는 객체입니다.");
				break;
			}
			System.out.println("결과 = " + t.calculate(999999, 1234567)); 
			
		}
	}

}
