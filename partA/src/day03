day03
리터럴과 데이터 형식
- 리터럴은 값 그 자체, 데이터 형식에 따라 표시하는 방법이 다릅니다.
	- 예) 1234는 int 정수, 메모리 크기는 4바이트
	- 1234L 은 long 정수, 메모리 크기는 8바이트
	- 3.1419는 double 실수, 메모리 크기는 8바이트(값의 표현범위, 소수점 이하 자릿수 차이)
	- 3.1419F는 float 실수, 메모리 크기는 4바이트
	- 'a' 또는 '6'는 char 문자1개, 메모리 크기는 2바이트
	- true 또는 false 2가지로 표시하는 boolean 논리형, 메모리 크기는 1바이트
	- 원시 타입은 아니지만 다른 프로그래밍 언어에서는 기본 형식으로 사용하는
	"java","1234"는 String 문자열 메모리 크기는 문자열안에 문자의 갯수에 따라 할당.

char 문자 데이터
	- 문자는 정수값을 코드로 갖습니다. 그 값은 0 또는 1로 표현 됩니다.
	- ASCII 코드는 128개의 기본 문자만 표현합니다.
	- 유니코드는 웹 환경이 발전하면서 다국어 문자를 표현하기 위한 표준으로 사용합니다.
	- char 은 2바이트를 사용해서 유니코드(unicode) 형식으로 표현합니다.
	- 아스키코드 128개에 포함된 문자는 유니코드와 같은 값입니다.

연산자 우선순위 종류			연산자
1. 1차 연산자				()
2. 단항 연산자			-	++(변수 앞에 있을 때) --(prefix, 전치)	!(논리연산)
3. 산술 연산자			* (곱하기) 	/ (나누기)	% (정수 나눗셈의 나머지)
4. 산술 연산자			+  -
5. 비트 이동(shift 연산)		<<   >>   >>>
6. 관계 연산자			<   <=   >   >=   ==(같다)   !=(같지않다)
7. 비트 논리				&    |    ^    ~
8. 논리 연산				&& (그리고, AND)
9. 논리 연산				|| (또는, OR)
10. 조건 연산자(삼항 연산)		?   :
11. 대입 연산				=   +=    -=    *=     /=   %= 등등 다른 연산자를 축약가능.

if 조건문
- 조건문은 데이터를 검사하는 조건식이 필요합니다.
- 조건식 결과는 참 true 또는 거짓 false 입니다.
- 관계연산과 논리연산으로 조건식을 작성합니다.
- 형식1 : if(조건식){참일때 실행하는 명령문들......}
- 형식2 : if(조건식){참일때 실행하는 명령문들.....}else{조건식이 거짓일때 실행하는 명령문들...}

*형식 1또는 2가 중첩되어 사용할 수 있습니다.

day03

A07CharacterTest
- 문자형 char 데이터와 변수
- 아스키 코드와 유니코드
- char과 int의 캐스팅(타입 변환)

A08AlphabetPrint
- 증감(단항) 연산자
- char에 대해 증감 연산자 사용

A09PrefixPostfixTest
- 증감 연산자 다른 명령문과 전치 또는 후치로 사용될때

A10IfTest
- if문 형식 : if 또는 if ~ else 
- if문의 조건식은 결과값이 boolean 형식이어야 합니다.

A11KeyInputTest
- 데이터 생성을 키보드 입력으로 해보기
- Scanner sc = new Scanner(system.in); 과 sc.nextInt();
- System.in 은 표준 입력. System.out 은 표준 출력 => console 입출력

A12KeyInputExam
- 키보드 입력 연습 예제