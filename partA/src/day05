day05
반복문 
1. for문
2. while문
3. do~while문

반복문과 같이 쓰이는 제어명령 : break, continue

반목문과 같이 쓰이는 {  } 는 블록(block) 이라고도 부릅니다. *참고 : []대괄호, ()소괄호
	- 포함되는 명령이 1개 일때는 {} 는 생략

블록 안에서 변수 선언을 하면, 그 변수는 블록 바깥에서는 사용 못합니다.


메소드(메소드는 메소드뒤에 ()소괄호가 붙는다. 클래스는 {}중괄호가 붙는다)
- 메소드는 클래스의 구성 요소 중 하나로 클래스의 기능 중 동작에 해당합니다.
- 예를 들면, 해피콜 주서기(쥬스를 만드는 기계) 또는 에어프라이
	재료 		동작 			결과물
	오렌지 -> 주서기는 갈아준다. -> 오렌지 주스
	생닭 ->  에어프라이기는 굽다.-> 후라이드 치킨
- 메소드는 특정 기능을 수행하도록 정의합니다.
	데이터 	-> 메소드가 처리합니다. 	-> 결과값
	(메소드의 인자) 	{   } 처리할 내용 작성 -> 리턴값
	<<형식 : 메소드 시그니처>>

	예시 : public static void aboutClass() {    .....    }
		private int addTwoNumber(int first, int second){   .....   }

	1. private 또는 public 또는 아무것도 안씀 : 접급(사용)범위
	2. static : 선택적으로 사용
	3. int 또는 double, boolean 또는 void : 리턴(결과)값 형식
	4. addTwoNumber : 메소드 이름. 주로 처리내용 관련 단어로 만듭니다.
	5. (int first, int second) : 메소드의 인자(데이터, 자료)를 타입과 변수명으로
	선언하고 매개변수라고 부릅니다.
